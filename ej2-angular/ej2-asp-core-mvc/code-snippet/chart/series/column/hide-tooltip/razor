   @Html.EJS().Chart("container").ChartArea(area => area.Border(br => br.Color("transparent"))).Series(series =>
             {
                 series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).Width(2).XName("xValue")
                 .Marker(mr => mr.Visible(true).Width(10).Height(10)).YName("yValue")
                 .DataSource(ViewBag.dataSource).Name("Germany").Add();
                 series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line)
                 .Width(2).XName("xValue").YName("yValue1")
                 .Marker(mr => mr.Visible(true).Width(10).Height(10))
                 .DataSource(ViewBag.dataSource).Name("England").Add();
             }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
             .MajorGridLines(mg => mg.Width(0))
             .IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years)
             .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).LabelFormat("y")
           ).PrimaryYAxis(py => py.LabelFormat("{value}%")
           .RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
           .MajorTickLines(mt => mt.Width(0))
           .MinorTickLines(mt => mt.Width(0))
           .LineStyle(ls => ls.Width(0)).Interval(20).Minimum(0).Maximum(100)
           ).Title("Inflation - Consumer Price").Tooltip(tt => tt.Enable(true)).TooltipRender("tooltipRender").SelectionMode(Syncfusion.EJ2.Charts.SelectionMode.Series).Render()
<script>
    var tooltipRender = function (args) {
        var series = (args.series);
        if (series.seriesElement.classList[0] === 'container_ej2_deselected') {
            args.cancel = true;
        }
    }
</script>