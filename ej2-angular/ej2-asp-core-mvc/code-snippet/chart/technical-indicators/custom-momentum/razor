
<script src="chart/technical-indicators/momentum/financial-data.js"></script>

      @Html.EJS().Chart("container-vertical").Rows(rows =>
       {
           rows.Height("40%").Add();
           rows.Height("60%").Add();
       }).Axes(ax =>
       {
           ax.Name("secondary").OpposedPosition(true).Minimum(80).Maximum(120).Interval(20).Title("Momentum").LineStyle(ViewBag.lineStyle).MajorGridLines(ViewBag.majorGridLines).MajorTickLines(ViewBag.majorTickLines).RowIndex(0).Add();
       }
           ).Series(series =>
           {
               series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Candle).XName("x").YName("y").High("high").Low("low").Open("open").Close("close").Volume("volume").BearFillColor("#2ecd71").BullFillColor("#e74c3d").DataSource("dataSource").Name("Apple Inc").Width(2).Add();
           }).Indicators(id =>
           {
               id.Fill("#6063ff")
               .YAxisName("secondary")
               .UpperLine(ViewBag.upperline)
               .Period(3)
               .Type(Syncfusion.EJ2.Charts.TechnicalIndicators.Momentum)
               .Field(Syncfusion.EJ2.Charts.FinancialDataFields.Close)
               .SeriesName("Apple Inc").Add();
           })
           .ZoomSettings(zn => zn.EnableSelectionZooming(true)
           .Mode(Syncfusion.EJ2.Charts.ZoomMode.X))
           .Crosshair(cr => cr.LineType(Syncfusion.EJ2.Charts.LineType.Vertical).Enable(true)
           )
           .PrimaryXAxis(px => px.ZoomFactor(0.2)
           .ZoomPosition(0.6)
           .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
           .MajorGridLines(ViewBag.majorGridLines)
           .CrosshairTooltip(ViewBag.crosshairTooltip)
             ).PrimaryYAxis(py => py.RowIndex(1)
             .OpposedPosition(true).Title("Price")
             .Minimum(50).Maximum(170)
             .Interval(30)
             .LabelFormat("{value}M")
             .PlotOffset(25)
             .LineStyle(ViewBag.lineStyle)
             ).Title("AAPL 2012-2017")
             .ChartArea(area => area.Border(ViewBag.ChartBorder))
             .Tooltip(tl => tl.Enable(true).Shared(true))
             .LegendSettings(lg => lg.Visible(false)).Load("load").Render()

<script>
        var dataSource = window.chartData;
</script>