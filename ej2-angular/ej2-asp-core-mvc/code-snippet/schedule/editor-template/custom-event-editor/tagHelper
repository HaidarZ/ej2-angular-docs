@using Syncfusion.EJ2.Schedule

<ejs-schedule id="schedule" height="550" selectedDate="new DateTime(2018, 2, 15)" views="@ViewBag.view" popupOpen="onPopupOpen" popupClose="onPopupClose" editorTemplate="#EventEditorTemplate" showQuickInfo="false" >
    <e-schedule-eventsettings dataSource="@ViewBag.datasource"></e-schedule-eventsettings>
</ejs-schedule>

<style>
    .custom-event-editor .e-textlabel {
        padding-right: 15px;
        text-align: right;
    }

    .custom-event-editor td {
        padding: 7px;
        padding-right: 16px;
    }
</style>
<script id="EventEditorTemplate" type="text/template">
    <table class="custom-event-editor" width="100%" cellpadding="5">
        <tbody>
            <tr>
                <td class="e-textlabel">Summary</td>
                <td colspan="4">
                    <input id="Subject" class="e-input" type="text" value="" name="Subject" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Status</td>
                <td colspan="4">
                    <input type="text" id="EventType" name="EventType" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">From</td>
                <td colspan="4">
                    <input id="StartTime" class="e-field" type="text" name="StartTime" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">To</td>
                <td colspan="4">
                    <input id="EndTime" type="text" name="EndTime" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Reason</td>
                <td colspan="4">
                    <textarea id="Description" class="e-input" name="Description" rows="3" cols="50" style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                </td>
            </tr>
        </tbody>
    </table>
</script>

<script type="text/javascript">
    function onPopupOpen(args) {
            if (args.type === 'Editor') {
                var subjectElement = args.element.querySelector('#Subject');
                if (subjectElement) {
                    subjectElement.value = (args.data).Subject || "";
                }
                var statusElement = args.element.querySelector('#EventType');
                if (!statusElement.classList.contains('e-dropdownlist')) {
                    var dropDownListObject = new ej.dropdowns.DropDownList({
                        placeholder: 'Choose status', value: (args.data).EventType,
                        dataSource: ['New', 'Requested', 'Confirmed']
                    });
                    dropDownListObject.appendTo(statusElement);
                }
                var startElement = args.element.querySelector('#StartTime');
                if (!startElement.classList.contains('e-datetimepicker')) {
                    startElement.value = (args.data).StartTime;
                    new ej.calendars.DateTimePicker({ value: new Date(startElement.value) || new Date() }, startElement);
                }
                var endElement = args.element.querySelector('#EndTime');
                if (!endElement.classList.contains('e-datetimepicker')) {
                    endElement.value = (args.data).EndTime;
                    new ej.calendars.DateTimePicker({ value: new Date(endElement.value) || new Date() }, endElement);
                }
                var descriptionElement = args.element.querySelector('#Description');
                if (descriptionElement) {
                    descriptionElement.value = (args.data).Description || "";
                }
            }
        }
    function onPopupClose(args) {
            if (args.type === 'Editor' && !ej.base.isNullOrUndefined(args.data)) {
                var subjectElement = args.element.querySelector('#Subject');
                if (subjectElement) {
                    (args.data).Subject = subjectElement.value;
                }
                var statusElement = args.element.querySelector('#EventType');
                if (statusElement) {
                    (args.data).EventType = statusElement.value;
                }
                var startElement = args.element.querySelector('#StartTime');
                if (startElement) {
                    (args.data).StartTime = startElement.value;
                }
                var endElement = args.element.querySelector('#EndTime');
                if (endElement) {
                    (args.data).EndTime = endElement.value;
                }
                var descriptionElement = args.element.querySelector('#Description');
                if (descriptionElement) {
                    (args.data).Description = descriptionElement.value;
                }
            }
    }
</script>