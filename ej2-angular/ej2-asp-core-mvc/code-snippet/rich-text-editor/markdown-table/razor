
@using Syncfusion.EJ2.RichTextEditor

<div class="control-wrapper">
    <div class="control-section">
        @Html.EJS().RichTextEditor("markdown").EditorMode(EditorMode.Markdown).ToolbarSettings(e => e.Items((object)ViewBag.items)).Value((string)ViewBag.value).Created("created").Render()
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script type="text/javascript">
    var mdsource, defaultRTE, textArea;
    function created() {
        defaultRTE = this;
        textArea = defaultRTE.contentModule.getEditPanel();
        textArea.addEventListener('keyup', (event) => { markDownConversion(); });
        var rteObj = defaultRTE;
        mdsource = document.getElementById('preview-code');
        mdsource.addEventListener('click', (event) => {
            fullPreview({ mode: true, type: 'preview' });
            if ((event.currentTarget).classList.contains('e-active')) {
                defaultRTE.disableToolbarItem(['Bold', 'Italic', 'StrikeThrough', '|',
                    'Formats', 'OrderedList', 'UnorderedList', '|',
                    'CreateLink', 'Image', 'Undo', 'Redo', 'CreateTable']);
            } else {
                defaultRTE.enableToolbarItem(['Bold', 'Italic', 'StrikeThrough', '|',
                    'Formats', 'OrderedList', 'UnorderedList', '|',
                    'CreateLink', 'Image', 'Undo', 'Redo', 'CreateTable']);
            }
        });
    };
    function markDownConversion() {
        if (mdsource.classList.contains('e-active')) {
            var id = defaultRTE.getID() + 'html-preview';
            var htmlPreview = defaultRTE.element.querySelector('#' + id);
            var rteElement = defaultRTE.contentModule.getEditPanel();
            var rteValue = rteElement.value;
            htmlPreview.innerHTML = marked(defaultRTE.value);
        }
    };
    function fullPreview(event) {
        var id = defaultRTE.getID() + 'html-preview';
        htmlPreview = defaultRTE.element.querySelector('#' + id);
        if (mdsource.classList.contains('e-active')) {
            mdsource.classList.remove('e-active');
            mdsource.parentElement.title = 'Preview';
            textArea.style.display = 'block';
            textArea.style.width = '100%';
            htmlPreview.style.display = 'none';
        } else {
            mdsource.classList.add('e-active');
            if (!htmlPreview) {
                htmlPreview = ej.base.createElement('div', { className: 'e-content' });
                htmlPreview.id = id;
                textArea.parentNode.appendChild(htmlPreview);
            }
            if (event.type === 'preview') {
                textArea.style.display = 'none'; htmlPreview.classList.add('e-pre-source');
            } else {
                htmlPreview.classList.remove('e-pre-source');
                textArea.style.width = '50%';
            }
            htmlPreview.style.display = 'block';
            markDownConversion();
            mdsource.parentElement.title = 'Code View';
        }
    }
</script>
<style>
    .e-richtexteditor textarea.e-content {
        float: left;
        border-right: 1px solid rgba(0, 0, 0, 0.12);
    }

    .e-richtexteditor .e-rte-content .e-content {
        min-height: 150px;
    }

    .e-richtexteditor .e-rte-content {
        overflow: hidden;
    }

    .e-icon-btn.e-active .e-md-preview::before {
        content: '\e350';
    }

    .e-icon-btn .e-md-preview::before {
        content: '\e345';
    }

    .e-rte-content .e-content {
        float: right;
        overflow: auto;
        height: inherit;
        padding: 8px;
        height: 100%;
    }

    .e-rte-content .e-content.e-pre-source {
        width: 100%;
    }
</style>